[{"authors":["admin"],"categories":null,"content":"His research interests include software security, software verification, and software engineering. More generally, he cares about the security and correctness of software.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1557161651,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://twleo.com/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"His research interests include software security, software verification, and software engineering. More generally, he cares about the security and correctness of software.","tags":null,"title":"Yu-Fu Fu","type":"authors"},{"authors":["Yu-Fu Fu","Jiaxiang Liu","Xiaomu Shi","Ming-Hsien Tsai","Bow-Yaw Wang","Bo-Yin Yang"],"categories":[],"content":"","date":1573479893,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1573479893,"objectID":"c117f2e1b207481dd568127f26fab93a","permalink":"https://twleo.com/publication/ccs19-signed-cryptoline-gcc/","publishdate":"2019-10-11T21:44:53+08:00","relpermalink":"/publication/ccs19-signed-cryptoline-gcc/","section":"publication","summary":"We develop an automated formal technique to specify and verify signed computation in cryptographic programs. In addition to new instructions, we introduce a type system to detect type errors in programs. A type inference algorithm is also provided to deduce types and instruction variants in cryptographic programs. In order to verify signed cryptographic C programs, we develop a translator from the GCC intermediate representation to our language. Using our technique, we have verified 82 C functions in cryptography libraries including NaCl, wolfSSL, bitcoin, OpenSSL, and BoringSSL.","tags":[],"title":"Signed Cryptographic Program Verification with Typed CryptoLine","type":"publication"}]